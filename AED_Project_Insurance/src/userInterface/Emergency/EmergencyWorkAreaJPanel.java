/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Emergency;

import Business.Enterprise.GovernmentEnterprise;
import Business.Location.LocationToAddress;
import Business.Network.Network;
import Business.Organization.EmergencyOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import static com.db4o.internal.InCallback.value;
import static com.sun.management.jmx.Trace.isSelected;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author amuly
 */
public class EmergencyWorkAreaJPanel extends javax.swing.JPanel {

    
    
    private JPanel userProcessContainer;
    private EmergencyOrganization organization;
    private GovernmentEnterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    /**
     * Creates new form EmergencyWorkAreaJPanel
     */
    
    
    
    public EmergencyWorkAreaJPanel(JPanel userProcessContainer,UserAccount userAccount,EmergencyOrganization organization,GovernmentEnterprise enterprise,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.network = network;
        populateTable();
    }

     private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) emergencyjTable.getModel();

        model.setRowCount(0);
        for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
                Object[] row = new Object[5];
                row[0] = workRequest;
                row[1] = workRequest.getStatus();
                row[2] = workRequest.getRequestDate();
                Float lat = workRequest.getCarInspection().getLattitude();
                Float lon = workRequest.getCarInspection().getLongitude();
                LocationToAddress locationToAddress = new LocationToAddress();
                JSONObject ret = locationToAddress.getLocationInfo(lat,lon);
                JSONObject location;
                String location_string=null;
                try {
                    //Get JSON Array called "results" and then get the 0th complete object as JSON
                    location = ret.getJSONArray("results").getJSONObject(0);
                    // Get the value of the attribute whose name is "formatted_string"
                    location_string = location.getString("formatted_address");
                    System.out.println(location_string);

                } catch (JSONException e1) {
                    row[3] = "No location Available";

                }
                
                row[3] = location_string;
                
                
                
                model.addRow(row);
        }
        
             emergencyjTable.setDefaultRenderer(Object.class, new TableCellRenderer(){
             private DefaultTableCellRenderer DEFAULT_RENDERER =  new DefaultTableCellRenderer();

            @Override
            public Component getTableCellRendererComponent(JTable emergencyjTable, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = DEFAULT_RENDERER.getTableCellRendererComponent(emergencyjTable, value, isSelected, hasFocus, row, column);
                if(isSelected){
                    c.setBackground(Color.YELLOW);
                }else{
                if (row%2 == 0){
                    c.setBackground(Color.WHITE);

                }
                else {
                    c.setBackground(Color.WHITE);
                }
                }  

                       
                if(emergencyjTable.getColumnModel().getColumn(column).getIdentifier().equals("Message")){//Here `Status` is column name
                     if(value.toString().equals("Emergency found")){//Here `OK` is the value of row
                         c.setBackground(Color.RED);                        
                        }  
                }
                
                return c;
            }

        });
    }
     

     
     
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emergencyjTable = new javax.swing.JTable();
        sendEmergencyBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        emergencyjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Message", "DateTime", "Location"
            }
        ));
        jScrollPane1.setViewportView(emergencyjTable);

        sendEmergencyBtn.setText("Send Emergency");
        sendEmergencyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmergencyBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        jLabel1.setText("Emergency Work Area");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(427, 427, 427)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sendEmergencyBtn)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 981, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(799, 799, 799)
                        .addComponent(jLabel1)))
                .addContainerGap(442, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel1)
                .addGap(77, 77, 77)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(sendEmergencyBtn)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void sendEmergencyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmergencyBtnActionPerformed

        int selectedRow = emergencyjTable.getSelectedRow();
        WorkRequest selectedworkRequest=null;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            selectedworkRequest = (WorkRequest) emergencyjTable.getValueAt(selectedRow, 0);
        
            String status = selectedworkRequest.getStatus();
            
            if(status.equals("Assistance sent"))
            {
                JOptionPane.showMessageDialog(null, "Assistance already sent");
            }
            else
            {
            selectedworkRequest.setStatus("Assistance sent");
            populateTable();
        }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_sendEmergencyBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable emergencyjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendEmergencyBtn;
    // End of variables declaration//GEN-END:variables
}
